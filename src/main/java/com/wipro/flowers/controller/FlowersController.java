package com.wipro.flowers.controller;import com.wipro.flowers.constant.LoggingConstant;import com.wipro.flowers.model.FlowersDTO;import com.wipro.flowers.model.UpdateResponseDTO;import com.wipro.flowers.model.UpdateUserDTO;import com.wipro.flowers.model.UserCountDTO;import com.wipro.flowers.service.impl.FlowersServiceImpl;import com.wipro.flowers.utils.CommonUtils;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.web.bind.annotation.*;import org.springframework.web.client.RestTemplate;import java.util.List;@RestController@RequestMapping("/flowers")public class FlowersController {    private static final Logger LOGGER = LoggerFactory.getLogger(FlowersController.class);    @Autowired    private FlowersServiceImpl flowersServiceImpl;    @Autowired    RestTemplate restTemplate;    public FlowersController(FlowersServiceImpl flowersServiceImpl) {        this.flowersServiceImpl = flowersServiceImpl;    }    @GetMapping("/count")    public UserCountDTO countUser() {        LOGGER.info(LoggingConstant.COUNT_WS_START);        // Fetch data from rest template        String inputData = CommonUtils.getDataFromRESTTemplate();        LOGGER.info(LoggingConstant.DATA_RETRIVED);        // Convert To List<FlowersDTO> Object        List<FlowersDTO> flowerList = CommonUtils.convertStringToObject(inputData);        LOGGER.info(LoggingConstant.CONVERT_TO_OBJECT);        return flowersServiceImpl.countUniqueUser(flowerList);    }    @PostMapping("/update")    public UpdateResponseDTO updateUser(@RequestBody UpdateUserDTO updateUserDTO) {        LOGGER.info(LoggingConstant.UPDATE_WS_START);        // Fetch data from rest template        String inputData = CommonUtils.getDataFromRESTTemplate();        LOGGER.info(LoggingConstant.DATA_RETRIVED);        // Convert To List<FlowersDTO> Object        List<FlowersDTO> flowerList = CommonUtils.convertStringToObject(inputData);        LOGGER.info(LoggingConstant.CONVERT_TO_OBJECT);        return flowersServiceImpl.updateUser(flowerList, updateUserDTO);    }}